- name: Update apt cache
  apt:
    update_cache: true
  become: true

- name: Install required packages
  apt:
    name:
      - autoconf
      - gcc
      - libgd-dev
      - make
      - unzip
    state: present
  become: true

- name: Ensure group "somegroup" exists
  ansible.builtin.group:
    name: "{{ nagios_group }}"
    state: present
    gid: 1100
  become: true

- name: Create Nagios user and group
  user:
    name: "{{ nagios_user }}"
    group: "{{ nagios_group }}"
    createhome: yes
  become: true

- name: Download Nagios Core
  get_url:
    url: "https://github.com/NagiosEnterprises/nagioscore/releases/download/nagios-{{ nagios_version }}/nagios-{{ nagios_version }}.tar.gz"
    dest: "/tmp/nagios-{{ nagios_version }}.tar.gz"
  become: true

- name: Extract Nagios Core
  unarchive:
    src: "/tmp/nagios-{{ nagios_version }}.tar.gz"
    dest: /tmp
    remote_src: yes
  become: true

- name: Run Config Script
  command: "./configure --with-command-group={{ nagios_group }}"
  args:
    chdir: "/tmp/nagios-{{ nagios_version }}"
  become: true

- name: Make & Install Nagios
  community.general.make:
    chdir: "/tmp/nagios-{{ nagios_version }}"
    target: "{{item}}"
  become: true
  with_items:
    - all
    - install
    - install-commandmode
    - install-init
    - install-config
    - install-webconf

- name: Run Config Script
  command: "./configure --with-command-group={{ nagios_group }}"
  args:
    chdir: "/tmp/nagios-{{ nagios_version }}"
  become: true

- name: Start Nagios service
  service:
    name: nagios
    state: started
    enabled: yes
  become: true

- name: Allow Http
  community.general.ufw:
    rule: allow
    port: '8080'
  become: true
  when: (ansible_facts['distribution'] == "Ubuntu")